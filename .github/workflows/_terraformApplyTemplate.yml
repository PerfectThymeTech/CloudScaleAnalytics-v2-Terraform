name: Terraform Apply Template

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: "dev"
        description: "Specifies the environment of the deployment."
      terraform_version:
        required: true
        type: string
        description: "Specifies the terraform version."
      working_directory:
        required: true
        type: string
        description: "Specifies the working directory."
    secrets:
      TENANT_ID:
        required: true
        description: "Specifies the tenant id of the deployment."
      CLIENT_ID:
        required: true
        description: "Specifies the client id."
      AZURE_SUBSCRIPTION_ID:
        required: true
        description: "Specifies the client id."

permissions:
  id-token: write
  contents: read

jobs:
  deployment:
    name: Terraform Apply
    runs-on: ubuntu-latest
    continue-on-error: false
    environment: ${{ inputs.environment }}

    env:
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}

    steps:
      # Setup Terraform
      - name: Setup Terraform
        id: terraform_setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          terraform_wrapper: true

      # Check Out Repository
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v3

      # Terraform Init
      - name: Terraform Init
        working-directory: ${{ inputs.working_directory }}
        run: |
          terraform init

      # Terraform Plan
      - name: Terraform Plan
        working-directory: ${{ inputs.working_directory }}
        run: |
          terraform apply -var-file vars.${{ inputs.environment }}.tfvars -auto-approve -input=false -no-color
