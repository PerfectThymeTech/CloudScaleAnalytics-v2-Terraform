name: Terraform Lint Template

on:
  workflow_call:
    inputs:
      terraform_version:
        required: true
        type: string
        description: "Specifies the terraform version."
      working_directory:
        required: true
        type: string
        description: "Specifies the working directory."

permissions:
  pull-requests: write

jobs:
  deployment:
    name: Terraform Lint
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      # Setup Terraform
      - name: Setup Terraform
        id: terraform_setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          terraform_wrapper: true

      # Check Out Repository
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v3

      # Terraform Format
      - name: Terraform Format
        id: terraform_format
        working-directory: ${{ inputs.working_directory }}
        run: |
          terraform fmt -check -recursive

      # Add Pull Request Comment
      - name: Add Pull Request Comment
        uses: actions/github-script@v6
        id: pr_comment
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Lint Results
            * Terraform Version ðŸ“Ž\`${{ inputs.terraform_version }}\`
            * Working Directory ðŸ“‚\`${{ inputs.working_directory }}\`
            * Terraform Format and Style ðŸ–Œ\`${{ steps.terraform_format.outcome }}\``;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
